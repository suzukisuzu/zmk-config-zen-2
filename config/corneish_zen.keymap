/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include "keycode_japanese.h"

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &mt Q LEFT_GUI  &kp W  &kp E                    &kp R  &kp T        &kp Y      &kp U  &kp I                     &kp O    &kp P     &kp BSPC
&kp LCTRL       &kp A           &kp S  &kp D                    &kp F  &kp G        &kp H      &kp J  &kp K                     &kp L    &kp JP_SEMI  &mt JP_COLON RCTRL
&kp LEFT_SHIFT  &kp Z           &kp X  &kp C                    &kp V  &kp B        &kp N      &kp M  &kp JP_COMMA                 &kp JP_DOT  &kp JP_SLASH  &kp RIGHT_SHIFT
                                       &mt LEFT_ALT LANGUAGE_2  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &mt RIGHT_ALT LANGUAGE_1
            >;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5        &kp N6    &kp N7    &kp N8  &kp N9     &kp N0       &kp DEL
&trans      &kp F1  &kp F2  &kp F3  &kp F4  &kp F5        &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp PAGE_UP  &kp PAGE_DOWN
&trans      &kp F6  &kp F7  &kp F8  &kp F9  &kp F10       &kp F11   &kp F12   &none   &none      &kp HOME     &kp END
                            &trans  &trans  &kp DELETE    &kp BSPC  &mo 3     &trans
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)    &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &none     &kp DELETE
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &none             &kp JP_PIPE            &kp JP_MINUS         &kp JP_CARET         &kp JP_AT            &kp JP_LBKT          &kp JP_RBKT  &kp JP_BSLH
&trans      &none             &none             &none             &none             &none               &kp JP_EQUAL         &kp JP_TILDE         &kp JP_GRAVE         &kp JP_LBRC          &kp JP_RBRC  &kp JP_UNDER
                                                &trans            &mo 3             &kp BSPC            &kp DEL           &trans            &trans
            >;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&none  &none            &none            &none            &none            &none              &none   &none              &none            &none  &none                 &none
&none  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI    &none   &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &none  &none                 &none
&none  &none            &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD    &none   &none              &none            &none  &kp LS(LG(UP_ARROW))  &kp LG(DOWN)
                                         &trans           &trans           &trans             &trans  &trans             &trans
            >;
        };
    };
};
